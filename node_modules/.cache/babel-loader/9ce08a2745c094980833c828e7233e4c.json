{"ast":null,"code":"import _classCallCheck from \"/Users/brandon/Desktop/Develop/aushuttle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brandon/Desktop/Develop/aushuttle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brandon/Desktop/Develop/aushuttle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brandon/Desktop/Develop/aushuttle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brandon/Desktop/Develop/aushuttle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brandon/Desktop/Develop/aushuttle/src/AdelphiCommuter/ErrorBoundary.jsx\";\nimport React from 'react';\nexport var ErrorBoundary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorBoundary).call(this, props));\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({\n        hasError: true\n      }); // You can also log the error to an error reporting service\n      //logErrorToMyService(error, info);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Something went wrong.\");\n      }\n\n      return this.props.children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);","map":{"version":3,"sources":["/Users/brandon/Desktop/Develop/aushuttle/src/AdelphiCommuter/ErrorBoundary.jsx"],"names":["React","ErrorBoundary","props","state","hasError","error","info","setState","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AACE,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,sCAMoBC,KANpB,EAM2BC,IAN3B,EAMiC;AAC7B;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAF6B,CAG7B;AACA;AACD;AAXH;AAAA;AAAA,6BAaW;AACP,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD;;AACD,aAAO,KAAKF,KAAL,CAAWM,QAAlB;AACD;AAnBH;;AAAA;AAAA,EAAmCR,KAAK,CAACS,SAAzC","sourcesContent":["import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    //logErrorToMyService(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}